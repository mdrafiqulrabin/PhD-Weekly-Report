In the past week: 

01. Objectives for the week 

    - select random 1000 examples from java-large training
    - features extraction for equals, setUp, toString
    - save huge c2v embeddings as flat
    - tSNE for flat c2v embeddings
    - SVM parameters optimization using StratifiedKFold and GridSerachCV
    - tSNE and SVM for handcrafted+c2v

02. The research skills (e.g. reading/writing/presentation/coding...) worked on 

    - Study materials for SVM, 3D-tSNE, StratifiedKFold, GridSerachCV
    - CS Seminar: Practicing Natural Language Processing (NLP) in Healthcare
    - CS in Practice: Shrinking Production Incidents by Google
  
03. Papers that you worked on (writing/editing)?  Please add links to the paper 
    
    https://www.overleaf.com/project/5e61d3179efa760001de1ea8
    
04. Code you developed. Add links to the GitHub or Bitbucket repo. 
    
    code2seq: /scratch/rabin/pca/uhserg-pca/code2seq
    handcrafted+code2seq: /scratch/rabin/pca/uhserg-pca/combine
    
05. Analysis that you performed. Include link to the dataset and results.  
    
    data: /scratch/rabin/pca/uhserg-pca/data
    result: /scratch/rabin/pca/uhserg-pca/result
    
06. Include the names and summaries of papers you read.  
    
     I will finish reading and writing pending papers within Spring Break.
    
07. Did you seek help when you needed that? 
  
    There was an issue for c2v embedding dimensions [200 path * 320 decoder state].

08. How could you increase your effectiveness by 1%. (e.g. writing scripts for some tasks, better organization, not doing some of the things that you did, etc.) 

    Following productivity tips of researchers: 
    https://www.academictransfer.com/en/blog/20-productivity-tips-for-researchers/.
    
09. Obstacles in you research and you plan to overcome them? 

    The issue of c2v embeddings is solved with flat embeddings.
    
10. Are you on track to be a productive researcher? 

    Yes.

Plan for the next week: 

11. Next weekâ€™s objectives (be as specific as possible)

    - Five basic ML algorithms: Naive Bayes, Logistic Regression, Support Vector Machine, Gradient Boosted Decision Tree, and Perceptron
    - Params tuning with StratifiedKFold cross-validation and GridSearchCV for parameters
    - Results for handcrafted features and c2v embeddings
    - Extract features for top-15 frequent methods in java-large-training
    - Run same experiment for those 15 classifier

12. Any skill that you want to practice?

    - Hyper-parameters Optimizations
  

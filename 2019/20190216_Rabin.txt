In the past week: 

01. Objectives for the week 

  - [COSC 8398 - Doctoral Research]
    - Optimization levels testing with timeout 30 for GCC 4.8.3 or 5.4.0.
    - Check the crashes bug in gcc regression testsuite. 
    - Run deepsmith from Docker: success.
    - Execute proto command in python.
    - Read 2 papers and write summaries.
  - [COSC 6323 - Statistical Methods]:
    - Study about Hypothesis Test over mu/p/variance.
    - Learn R on Statistics: piping, dplyr, etc.
  - [COSC 6385 - Computer Architecture]:
    - Study about Branch Prediction.
  - [COSC 4315/6345 - Programming Languages]:
    - Attend to the classes and TA hours.
    - Upload inputs for HW1.

02. The research skills (e.g. reading/writing/presentation/coding...) worked on 

    Computer Science Seminar:
      - From Theory to Application: Block-Structured Interger Programming Meets Blockchain
        Link: http://www.uh.edu/nsm/computer-science/news-events/seminars/2019/0211-chen.php
      
      - Compression of Convolutional Neural Netwroks Based on Kernal Redundancy 
        Link: http://www.uh.edu/nsm/computer-science/news-events/seminars/2019/0215-liao.php
   
   Resource:
      - Execute proto command in python.
      Link: https://developers.google.com/protocol-buffers/docs/reference/python-generated

03. Papers that you worked on (writing/editing)?  Please add links to the paper 

    Adding result of the 13 hrs optimization levels testing with 30 timeout: 
      - result.tex ( table-V): GCC(4.8.0) with 30 timeout.
      - result.tex (table-VI): GCC(5.4.0) with with 30 timeout.
    Link: https://www.overleaf.com/9713562856nbbcwgbqnhvz

04. Code you developed. Add links to the GitHub or Bitbucket repo. 

    - Optimization levels testing with timeout 30 for GCC 4.8.3 or 5.4.0
      Link: https://github.com/mdrafiqulrabin/Doctoral-Research/tree/master/differential_testing/sabine_csmith/scripts/v5
    - Check the crashes bug in gcc regression testsuite. 
      Link: https://github.com/mdrafiqulrabin/Doctoral-Research/tree/master/differential_testing/gcc_regression/gcc_reg_cb/ecripts
       
05. Analysis that you performed. Include link to the dataset and results.  

    - Optimization levels testing with timeout 30 for GCC 4.8.3 or 5.4.0
      Link: https://github.com/mdrafiqulrabin/Doctoral-Research/tree/master/differential_testing/sabine_csmith/results/v5
    - Check the crashes bug in gcc regression testsuite. 
      Link: https://github.com/mdrafiqulrabin/Doctoral-Research/tree/master/differential_testing/gcc_regression/gcc_reg_cb/results

06. Include the names and summaries of papers you read.  

    - Paper-01: Deep Reinforcement Fuzzing
      Link: https://github.com/mdrafiqulrabin/Paper-Summary/blob/master/Spring-2019/20190211_rabin.txt
    - Paper-02: Development of Intelligent Digital Certificate Fuzzer
      Link: https://github.com/mdrafiqulrabin/Paper-Summary/blob/master/Spring-2019/20190213_rabin.txt

07. Did you seek help when you needed that? 

  - Search google and inform professor for guideline when getting stuck.

08. How could you increase your effectiveness by 1%. (e.g. writing scripts for some tasks, better organization, not doing some of the things that you did, etc.) 

  - Execute proto command by reading web manual.

09. Obstacles in you research and you plan to overcome them? 

  - Couldn't able to install trunk version of GCC, will look at free time.
  - Difficulties to install deepsmith from command line, need to fix proto import.

10. Are you on track to be a productive researcher? 

  - Solve some programming problems in Hackerrank.
  - Sign-up into ORCID, ResearcherID, etc.

Plan for the next week: 

11. Next weekâ€™s objectives (be as specific as possible)

  - Install the 'trunk' version of GCC.
  - Finish the setup of forkdeepsmith.
  - Study about Out Order Execution [COSC 6385 - Computer Architecture].
  - Study about Ref Paper and HW1 [COSC 6323 - Statistical Methods].
  - Study about Ref Paper and Test Data [COSC 6323 - Statistical Methods].
  - Study about HW2 and Project(Fig.2&3) [COSC 6323 - Statistical Methods].
  - Attend to all class course and ta hours.

12. Any skill that you want to practice?

  - Gephi visualization
  

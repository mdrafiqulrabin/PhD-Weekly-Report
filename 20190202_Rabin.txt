In the past week: 

01. Objectives for the week 

  - [COSC 8398 - Doctoral Research]
    - Checking type of crash bug in clang and gcc (mac, maxwell, sabine).
    - Fixing undefined issue of c programs by adding "-msse4.2" with gcc command.
    - Perform 12 hrs optimization level testing with GCC(4.8.2,5.40) between -O0 and -O3 for default,k3,k10. [3 times]
    - Draw flow diagram and Save result of the differential testing at overleaf.
    - Fork deepsmith: https://github.com/mdrafiqulrabin/forkdeepsmith
    - Read 2 papers and write summaries.
  - [COSC 6323 - Statistical Methods]:
    - Study about Probability and Sampling Distributions.
    - Learn about basic R on Statistics: gglpot, dnorm, pnorm, qnorm, rnorm, binorm.
  - [COSC 6385 - Computer Architecture]:
    - Study about Pipelining and Instruction Level Parallelism.
    - Quiz-1 based on L1~L3.
  - [COSC 4315/6345 - Programming Languages]:
    - Attend to the classes and TA hours.
    - Study about Memory Layout of C Programs: Text, Data Segment, Heap, Stack.
    - Add students and upload hw1 handout to Kodethon.
    - Random e-meeting with students for Kodethon Login.

02. The research skills (e.g. reading/writing/presentation/coding...) worked on 

  - Read about X86-Built-in-Functions:
    Link: https://gcc.gnu.org/onlinedocs/gcc-4.8.5/gcc/X86-Built-in-Functions.html
  
  - Attending some computer sciencd seminars:
    - Continuous Intelligence - Machine Learning - Delivered Continuously
    - Automatic Generation of Temporal Logic Properties
    - AI for Identity & Health

03. Papers that you worked on (writing/editing)?  Please add links to the paper 

    Adding result of the optimization levels testing (3 times) for 12 hrs in Sabine: 
      - result.tex (table-1): GCC(4.8.0) between -O0 and -O3 with round-robin selection of arguments for default, k3 and k10.
      - result.tex (table-2): GCC(5.4.0) between -O0 and -O3 with round-robin selection of arguments for default, k3 and k10.
    Link: https://www.overleaf.com/9713562856nbbcwgbqnhvz

04. Code you developed. Add links to the GitHub or Bitbucket repo. 

  - Check crash bug in GCC(6.1.0/7.1.0) after fixing undefined issue by adding "-msse4.2".
    Link: https://github.com/mdrafiqulrabin/Doctoral-Research/blob/master/differential_testing/sabine_csmith/scripts/gcc_crash_k10.sh
  - Optimization levels testing with GCC(4.8.2/5.4.0) between -O0 and -O3 in Sabine with round-robin selection of arguments:
    Link: https://github.com/mdrafiqulrabin/Doctoral-Research/tree/master/differential_testing/sabine_csmith/scripts/v2

05. Analysis that you performed. Include link to the dataset and results.  

    - GCC(4.8.2): https://github.com/mdrafiqulrabin/Doctoral-Research/tree/master/differential_testing/sabine_csmith/results/v2/gcc-482/
    - GCC(5.4.0): https://github.com/mdrafiqulrabin/Doctoral-Research/tree/master/differential_testing/sabine_csmith/results/v2/gcc-540/

06. Include the names and summaries of papers you read.  

  - Paper-01: Grammar-based Program Generation Based on Model Finding.
    Link: https://github.com/mdrafiqulrabin/Paper-Summary/blob/master/Spring-2019/20190129_rabin.txt
  - Paper-02: Program-Adaptive Mutational Fuzzing.
    Link: https://github.com/mdrafiqulrabin/Paper-Summary/blob/master/Spring-2019/20190201_rabin.txt

07. Did you seek help when you needed that? 

  - Search google for random bash script syntax.
  - Talk with TA of [COSC 6385 - Computer Architecture] about ILP example.

08. How could you increase your effectiveness by 1%. (e.g. writing scripts for some tasks, better organization, not doing some of the things that you did, etc.) 

  - Compute differential testing result 3 times for 2 version of compilers.

09. Obstacles in you research and you plan to overcome them? 

  - Read 2 papers instead of 3 papers for unplanned quiz of [COSC 6385 - Computer Architecture].

10. Are you on track to be a productive researcher? 

  - Attend to some seminars and solve some programming problems in Hackerrank.

Plan for the next week: 

11. Next weekâ€™s objectives (be as specific as possible)

  - Fork DARPA and setup the configuration for the forkdarpa.
  - Setup the configuration for the forkdeepsmith.
  - Study about CPU Performance of [COSC 6385 - Computer Architecture].
  - Study about Statistical Hypothesis of [COSC 6323 - Statistical Methods].
  - Submit homework1 of [COSC 6323 - Statistical Methods].
  - Attend to all class course and ta hours.

12. Any skill that you want to practice?

  - Setup Sweave in R Studio.
  - Latex report with R Sweave.
  
